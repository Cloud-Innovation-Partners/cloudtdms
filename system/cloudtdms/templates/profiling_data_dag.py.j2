{% extends "dag.py.j2"%}

{% block import_python_libraries %}
import sys
import os
import csv
import pandas as pd
from datetime import datetime, timedelta
from pandas_profiling import ProfileReport

{% endblock import_python_libraries %}


{% block import_tdms_modules %}

from system.dags import get_profiling_data_home, get_cloudtdms_home, get_config_default_path, get_reports_home
from system.cloudtdms.discovery import discover
from system.cloudtdms.utils.pii_report import PIIReport
from system.cloudtdms.utils.smtp_email import SMTPEmail

{% endblock import_tdms_modules %}


{% block params %}
        params={
            'data_file' : "{{ data.data_file|string }}"
        }
{% endblock %}

{% block operator_functions %}
{% include 'profiling_data_dag_operator_functions.py.j2' %}
{% endblock operator_functions %}

{% block airflow_operators %}

start = DummyOperator(task_id="start", dag=dag)
end = DummyOperator(task_id="end", dag=dag)
eda_stream = PythonOperator(task_id="ExploratoryDataProfiling", python_callable=generate_eda_profile, dag=dag)
sensitive_data_profile = PythonOperator(task_id="SensitiveDataDiscovery", python_callable=generate_sensitive_data_profile, dag=dag)
configuration = PythonOperator(task_id="GenerateConfiguration", python_callable=generate_configuration, dag=dag)

{% endblock airflow_operators%}

{% block dependencies %}

if SMTPEmail.availability():
    send_email = PythonOperator(task_id="EmailReports", python_callable=email_reports, dag=dag)
    start >> [eda_stream, sensitive_data_profile]>> send_email >> end
else:
    start >> [eda_stream, sensitive_data_profile]>> end

{% endblock %}